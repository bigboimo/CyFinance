package com.example.demo.expenses;

import com.example.demo.users.User;
import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;

/**
 * The Expenses entity class represents various types of expenses associated with a user.
 * It demonstrates a many-to-one relationship with the User entity, indicating each expense entry
 * is linked to a single user, but one user can have multiple expenses.
 */
@Entity
@Table(name = "expenses")
public class Expenses {

    // Unique identifier for each expense entry. Autogenerated by the database.
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;

    // Expense amount spent on food.
    private float food;

    // Expense amount spent on rent and bills combined.
    private float rentandBills;

    // Expense amount spent on school or education-related expenses.
    private float school;

    // Expense amount spent on other necessary items not covered by the above categories.
    private float otherNeeds;

    // Expense amount spent on miscellaneous items.
    private float misc;

    // The user to whom these expenses belong.
    // @JsonIgnore prevents the user field from being serialized into JSON to avoid infinite recursion
    // in bidirectional relationships, where user also contains expenses.
    @ManyToOne
    @JoinColumn(name = "user_id") // Specifies the foreign key column in the database.
    @JsonIgnore
    private User user;

    /**
     * Full constructor for creating an Expenses instance with all expense fields initialized.
     * @param food Amount spent on food.
     * @param rentandBills Amount spent on rent and bills.
     * @param school Amount spent on school/education.
     * @param otherNeeds Amount spent on other needs.
     * @param misc Amount spent on miscellaneous items.
     */
    public Expenses(float food, float rentandBills, float school, float otherNeeds, float misc) {
        this.food = food;
        this.rentandBills = rentandBills;
        this.school = school;
        this.otherNeeds = otherNeeds;
        this.misc = misc;
    }

    // Default constructor required by JPA.
    public Expenses() {}

    // Getter and setter methods for each field, providing access to and the ability to modify the expenses' details.

    public int getId() { return id; }
    public void setId(int id) { this.id = id; }

    public float getFood() { return food; }
    public void setFood(float food) { this.food = food; }

    public float getRentandBills() { return rentandBills; }
    public void setRentandBills(float rentandBills) { this.rentandBills = rentandBills; }

    public float getSchool() { return school; }
    public void setSchool(float school) { this.school = school; }

    public float getOtherNeeds() { return otherNeeds; }
    public void setOtherNeeds(float otherNeeds) { this.otherNeeds = otherNeeds; }

    public float getMisc() { return misc; }
    public void setMisc(float misc) { this.misc = misc; }

    public User getUser() { return user; }
    public void setUser(User user) { this.user = user; }

    // Custom toString method to provide a string representation of an Expenses instance,
    // useful for logging and debugging purposes.
    @Override
    public String toString() {
        return "Expenses{" + "\"id\":" + id +
                ", \"food\":" + food +
                ", \"rentandBills\":" + rentandBills +
                ", \"school\":" + school +
                ", \"otherNeeds\":" + otherNeeds +
                ", \"misc\":" + misc +
                '}';
    }
}
